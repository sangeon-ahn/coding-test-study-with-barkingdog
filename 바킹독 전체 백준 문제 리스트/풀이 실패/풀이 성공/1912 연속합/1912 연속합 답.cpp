#include <bits/stdc++.h>
using namespace std;
/*
  수열의 맨 첫번째 숫자에서부터 합을 구하다가 누적값+현재값이 현재값보다 작으면 다 버리고 다음 숫자부터 다시
  시작한다.
*/
int n;
int a[100010];
int d[100010];

int main() {
  ios::sync_with_stdio(0);
  cin.tie(0);

  cin >> n;

  for (int i = 1; i <= n; i++) {
    cin >> a[i];
    // 지금까지 더한 것 + 현재값과 현재값 중 더 큰값을 취함.
    d[i] = max(a[i], d[i - 1] + a[i]);
    /*
      d[1] = d[1] = 10;
      d[2] = max(d[2] = -4, d[1] + a[2] = 6) = 6;
      d[3] = max(d[3] = 3, d[2] + a[3] = 9) = 9;
      d[4] = max(d[4] = 1, d[3] + a[4] = 14) = 14;
      d[5] = max(d[5] = 5, d[4] + a[5] = 19) = 19;
      d[6] = max(d[6] = 6, d[5] + a[6] = 25) = 25;
      d[7] = max(d[7] = -35, d[6] + a[7] = -10) = -10;
      d[8] = max(d[8] = 12, d[7] + a[8] = 2) = 12;
      d[9] = max(d[9] = 21, d[8] + a[9] = 33) = 33;
      d[10] = max(d[10] = -1, d[9] + a[10] = 32) = 32;
    */
  }

  // d 배열 원소 중 최대값이 답.
  cout << *max_element(d + 1, d + n + 1);
}