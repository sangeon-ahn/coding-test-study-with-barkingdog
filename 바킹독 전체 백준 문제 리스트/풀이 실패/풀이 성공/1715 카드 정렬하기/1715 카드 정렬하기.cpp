#include <bits/stdc++.h>
using namespace std;
// 틀림
/*
  이 방법이 안되는 이유는,
  예시로 카드묶음이 10 10 10 10 10 이렇게 있다고 치자.
  내 풀이대로면 10 + 10 + 20 + 10 + 30 + 10 + 40 + 10 => 140번이다.
  그런데 10 + 10, 10 + 10, 20 + 10, 20 + 30 => 120번이다.
  따라서 접근방식 자체가 틀렸고, 매 순간 가장 작은 뭉치와 그 다음 뭉치를 더해야 하는 문제다.
  따라서 우선순위 큐를 사용한다.
*/
int N;
int arr[100010];

int main() {
  ios::sync_with_stdio(0);
  cin.tie(0);
  cin >> N;

  for (int i = 0; i < N; i++) {
    cin >> arr[i];
  }

  int sum = 0;

  if (N == 1) {
    cout << 0;
    return 0;
  }
  /*
    10 => 0
    10 + 20 => 1, 1
    10 + 20 + 10 + 20 + 40 => 2, 2, 1
    10 + 20 + 10 + 20 + 40 + 10 + 20 + 40 + 60 => 3, 3, 2, 1
  */
  for (int i = N - 1; i >= 0; i--) {
    sum += arr[i] * (N - i);
  }

  cout << sum - arr[0];
}